{
	"info": {
		"_postman_id": "226ec367-7394-4fc9-b7cb-e9b7c49db615",
		"name": "oauth-server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. permission",
			"item": [
				{
					"name": "1.3 get-permission-list",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseURL}}/permission",
							"protocol": "http",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"permission"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.2 get-permission-by-id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseURL}}/permission/{{permission-id}}/permissionId",
							"protocol": "http",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"permission",
								"{{permission-id}}",
								"permissionId"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.4 get-permission-by-name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseURL}}/permission/{{permission-name}}/name",
							"protocol": "http",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"permission",
								"{{permission-name}}",
								"name"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.1 create-permission",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response;\r",
									"if(res.code===201){\r",
									"const result =  pm.response.json();\r",
									"pm.environment.set(\"permission-id\", result.id);\r",
									"pm.environment.set(\"permission-name\", result.name)\r",
									"\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " {\r\n        \"id\": 8,\r\n        \"name\": \"can_view_appointment\"\r\n }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseURL}}/permission",
							"protocol": "http",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"permission"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.2 create-permission-list",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " [{\"name\": \"can_delete_menu\"},{\"name\": \"can_view_menu\"}]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseURL}}/permission/create",
							"protocol": "http",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"permission",
								"create"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2. roles",
			"item": [
				{
					"name": "2.4 get-roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response;\r",
									"if(res.code===200){\r",
									"const result =  pm.response.json();\r",
									"pm.environment.set(\"role-id\", result.id)\r",
									"pm.environment.set(\"role-name\", result.name)\r",
									"\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseURL}}/role/",
							"protocol": "http",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"role",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "2.3 get-roles-by-id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response;\r",
									"if(res.code===200){\r",
									"const result =  pm.response.json();\r",
									"pm.environment.set(\"role-name\", result.name)\r",
									"\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseURL}}/role/{{role-id}}/role-id",
							"protocol": "http",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"role",
								"{{role-id}}",
								"role-id"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.2 get-roles-by-name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseURL}}/role/{{role-name}}/name",
							"protocol": "http",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"role",
								"{{role-name}}",
								"name"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.1 create-role",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response;\r",
									"if(res.code===201){\r",
									"const result =  pm.response.json();\r",
									"pm.environment.set(\"role-id\", result.id)\r",
									"pm.environment.set(\"role-name\", result.name)\r",
									"\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"name\": \"role_super_admin\"\r\n }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseURL}}/role",
							"protocol": "http",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"role"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.5 add-permission-to-role",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{role-id}},\r\n    \"name\": \"{{role-name}}\",\r\n    \"permissions\": [\r\n        {\r\n            \"id\": 5,\r\n            \"name\": \"can_create_appointment\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseURL}}/role/permission",
							"protocol": "http",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"role",
								"permission"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "3. Users",
			"item": [
				{
					"name": "3.1 create-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response;\r",
									"if(res.code===201){\r",
									"const result =  pm.response.json();\r",
									"pm.environment.set(\"employee-id\", result.id)\r",
									"pm.environment.set(\"username\", result.username)\r",
									"pm.environment.set(\"email\", result.email)\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"email\": \"aman@gmail.com\",\r\n\"username\": \"aman\",\r\n\"password\": \"aman\",\r\n\"enabled\": true,\r\n\"accountNonLocked\": true,\r\n\"accountNonExpired\": true,\r\n\"credentialsNonExpired\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseURL}}/user/register",
							"protocol": "http",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.4 add-role-to-user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response;\r",
									"if(res.code===201){\r",
									"const result =  pm.response.json();\r",
									"pm.environment.set(\"employee-id\", result.id)\r",
									"pm.environment.set(\"username\", result.username)\r",
									"pm.environment.set(\"email\", result.email)\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"email\": \"nasruddin@gmail.com\",\r\n    \"username\": \"nasruddin\",\r\n    \"password\": \"nasruddin\",\r\n    \"enabled\": true,\r\n    \"accountNonLocked\": false,\r\n    \"accountNonExpired\": false,\r\n    \"credentialsNonExpired\": false,\r\n    \"roles\": [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"role_admin\",\r\n            \"permissions\": [\r\n                {\r\n                    \"id\": 4,\r\n                    \"name\": \"can_delete_user\"\r\n                },\r\n                {\r\n                    \"id\": 3,\r\n                    \"name\": \"can_read_user\"\r\n                },\r\n                {\r\n                    \"id\": 2,\r\n                    \"name\": \"can_update_user\"\r\n                },\r\n                {\r\n                    \"id\": 1,\r\n                    \"name\": \"can_create_user\"\r\n                }\r\n            ]\r\n        }, \r\n        {\r\n            \"id\":5,\r\n            \"name\":\"role_developer\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{baseURL}}/user/role",
							"protocol": "http",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"role"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.2 get-user-by-id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response;\r",
									"if(res.code===200){\r",
									"const result =  pm.response.json();\r",
									"pm.environment.set(\"role-name\", result.name)\r",
									"\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseURL}}/user/{{employee-id}}/employee-id",
							"protocol": "http",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"{{employee-id}}",
								"employee-id"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.6 get-users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response;\r",
									"if(res.code===200){\r",
									"const result =  pm.response.json();\r",
									"pm.environment.set(\"role-name\", result.name)\r",
									"\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseURL}}/user/{{employee-id}}/employee-id",
							"protocol": "http",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"{{employee-id}}",
								"employee-id"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.3 get-user-by-name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response;\r",
									"if(res.code===200){\r",
									"const result =  pm.response.json();\r",
									"pm.environment.set(\"role-name\", result.name)\r",
									"\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseURL}}/user/{{username}}/user-name",
							"protocol": "http",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"{{username}}",
								"user-name"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.5 get-user-by-email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const res = pm.response;\r",
									"if(res.code===200){\r",
									"const result =  pm.response.json();\r",
									"pm.environment.set(\"role-name\", result.name)\r",
									"\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{baseURL}}/user/{{email}}/user-email",
							"protocol": "http",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"user",
								"{{email}}",
								"user-email"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "resource-server",
			"item": [
				{
					"name": "get-admin-url",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUserResourceURL}}/common/",
							"host": [
								"{{baseUserResourceURL}}"
							],
							"path": [
								"common",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get-developer",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUserResourceURL}}/developer/",
							"host": [
								"{{baseUserResourceURL}}"
							],
							"path": [
								"developer",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get-user-url",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUserResourceURL}}/users/",
							"host": [
								"{{baseUserResourceURL}}"
							],
							"path": [
								"users",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "health-check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseURL}}/actuator/health",
					"protocol": "http",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"actuator",
						"health"
					]
				}
			},
			"response": []
		},
		{
			"name": "create-clients",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"clientId\":\"SOCIAL_CLIENT_APP\",\r\n    \"clientSecret\":\"SOCIAL_CLIENT_APP\",\r\n    \"resourceIdS\":\"USER_CLIENT_RESOURCE,USER_ADMIN_RESOURCE\",\r\n    \"scope\":\"role_admin,role_user\",\r\n    \"authorizedGrantTypes\":\"authorization_code,password,refresh_token,implicit\",\r\n    \"accessTokenValidity\":900,\r\n    \"refreshTokenValidity\":3600,\r\n    \"additionalInformation\":\"{}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseURL}}/clients/register",
					"protocol": "http",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"clients",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "create-token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const res = pm.response;\r",
							"if(res.code===200){\r",
							"const result =  pm.response.json();\r",
							"console.log(result);\r",
							"// pm.environment.set(\"permission-name\", result.name)\r",
							"\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "SOCIAL_CLIENT_APP",
							"type": "string"
						},
						{
							"key": "username",
							"value": "SOCIAL_CLIENT_APP",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "aman",
							"type": "default"
						},
						{
							"key": "password",
							"value": "aman",
							"type": "default"
						},
						{
							"key": "grant_type",
							"value": "password",
							"type": "default"
						},
						{
							"key": "refresh_token",
							"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiVVNFUl9DTElFTlRfUkVTT1VSQ0UiLCJVU0VSX0FETUlOX1JFU09VUkNFIl0sInVzZXJfbmFtZSI6Im5hc3J1ZGRpbiIsInNjb3BlIjpbInJvbGVfYWRtaW4iXSwiYXRpIjoibThlNElGdnRrdk80dWg3aDZFYy1qODlqME1ZIiwiZXhwIjoxNjY5NTMyNzcxLCJhdXRob3JpdGllcyI6WyJyb2xlX2FkbWluIiwiY2FuX3VwZGF0ZV91c2VyIiwiY2FuX3JlYWRfdXNlciIsImNhbl9jcmVhdGVfdXNlciIsImNhbl9kZWxldGVfdXNlciJdLCJqdGkiOiJ5MGVmZDN0dmg0S0RNUmVNamNEZXJ1MGFWT0UiLCJlbWFpbCI6Im5hc3J1ZGRpbkBnbWFpbC5jb20iLCJjbGllbnRfaWQiOiJTT0NJQUxfQ0xJRU5UX0FQUCJ9.DBFaaQEhCs-liIQYpCgzQAQMKR5LX5risew2b6_QmJMKbnDlXyh6Ej1omeBusNLEpBcXhHgvkPzD262xKFrJHq8bVS3O6PQMWPP_jjD5mNg8m8NP-s0_R46wOCw0K1PCGICLR0UiRE5J7FHnXYZvX_R_a22X2853FuBVvJNjF0AQ5ZG_FAnJ3tPkbpHguRMIBemjhQA26IOGDFJM62Se79FbMzqrIla5YKWQAIZ-RJCjwghIPiQI8HkI_bSKxmCqivrtLxLrlxUk0XaO6Y4c2IdBGS2pAU94HlyQYt57ayfze8XLhKgUDISuIJanm9l4-KxAK6t5-T8RawFB84G4gg",
							"type": "default",
							"disabled": true
						},
						{
							"key": "client_id",
							"value": "SOCIAL_CLIENT_APP",
							"type": "default",
							"disabled": true
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseURL}}/oauth/token",
					"protocol": "http",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "create-token Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const res = pm.response;\r",
							"if(res.code===200){\r",
							"const result =  pm.response.json();\r",
							"console.log(result);\r",
							"// pm.environment.set(\"permission-name\", result.name)\r",
							"\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "SOCIAL_CLIENT_APP",
							"type": "string"
						},
						{
							"key": "username",
							"value": "SOCIAL_CLIENT_APP",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "aman",
							"type": "default"
						},
						{
							"key": "password",
							"value": "aman",
							"type": "default"
						},
						{
							"key": "grant_type",
							"value": "password",
							"type": "default"
						},
						{
							"key": "refresh_token",
							"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiVVNFUl9DTElFTlRfUkVTT1VSQ0UiLCJVU0VSX0FETUlOX1JFU09VUkNFIl0sInVzZXJfbmFtZSI6Im5hc3J1ZGRpbiIsInNjb3BlIjpbInJvbGVfYWRtaW4iXSwiYXRpIjoibThlNElGdnRrdk80dWg3aDZFYy1qODlqME1ZIiwiZXhwIjoxNjY5NTMyNzcxLCJhdXRob3JpdGllcyI6WyJyb2xlX2FkbWluIiwiY2FuX3VwZGF0ZV91c2VyIiwiY2FuX3JlYWRfdXNlciIsImNhbl9jcmVhdGVfdXNlciIsImNhbl9kZWxldGVfdXNlciJdLCJqdGkiOiJ5MGVmZDN0dmg0S0RNUmVNamNEZXJ1MGFWT0UiLCJlbWFpbCI6Im5hc3J1ZGRpbkBnbWFpbC5jb20iLCJjbGllbnRfaWQiOiJTT0NJQUxfQ0xJRU5UX0FQUCJ9.DBFaaQEhCs-liIQYpCgzQAQMKR5LX5risew2b6_QmJMKbnDlXyh6Ej1omeBusNLEpBcXhHgvkPzD262xKFrJHq8bVS3O6PQMWPP_jjD5mNg8m8NP-s0_R46wOCw0K1PCGICLR0UiRE5J7FHnXYZvX_R_a22X2853FuBVvJNjF0AQ5ZG_FAnJ3tPkbpHguRMIBemjhQA26IOGDFJM62Se79FbMzqrIla5YKWQAIZ-RJCjwghIPiQI8HkI_bSKxmCqivrtLxLrlxUk0XaO6Y4c2IdBGS2pAU94HlyQYt57ayfze8XLhKgUDISuIJanm9l4-KxAK6t5-T8RawFB84G4gg",
							"type": "default",
							"disabled": true
						},
						{
							"key": "client_id",
							"value": "SOCIAL_CLIENT_APP",
							"type": "default",
							"disabled": true
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseURL}}/oauth/token",
					"protocol": "http",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		}
	]
}